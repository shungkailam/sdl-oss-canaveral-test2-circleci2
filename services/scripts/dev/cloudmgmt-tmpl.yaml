
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: cloudmgmt-deployment
spec:
  replicas: 1
  template:
    metadata:
      name: cloudmgmt
      labels:
        app: cloudmgmt
    spec:
      containers:
      - name: cloudmgmt
        image: 770301640873.dkr.ecr.us-west-2.amazonaws.com/cloudmgmt-dev
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: accessKeyId
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: secretAccessKey
        - name: SHERLOCK_MGMT_DB_SERVICE
          value: SQL
        - name: SQL_DB
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: db
        - name: SQL_HOST
          value: sherlock-pg-dev-cluster.cluster-cn6yw4qpwrhi.us-west-2.rds.amazonaws.com
        - name: SQL_PORT
          value: "5432"
        - name: SQL_DIALECT
          value: postgres
        - name: SQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: sqlPassword
        ports:
        - containerPort: 3000
---

kind: Service
apiVersion: v1
metadata:
  name: cloudmgmt-svc
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: 'arn:aws:acm:us-west-2:770301640873:certificate/c8f783a9-478a-43b3-872a-9fdff41ff0da'
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
spec:
  selector:
    app: cloudmgmt
  type: LoadBalancer
  ports:
  - name: ssl
    port: 443
    protocol: TCP
    targetPort: 3000
  - name: http
    port: 80
    protocol: TCP
    targetPort: 3000

