kind: Secret
apiVersion: v1
metadata:
  name: license-secret
data:
  license.bin:
    AAAFogAA+df/////AAAACwABAAAAAAEAAAAoAK0FAAAACwCuAAAAB+IAAAALAK8AAAAABQAAAAsAsAAAAAAAAAAACwDKAAAAAAYAAAMpACkFAAAABwAzCgAAABEADgJpbmZlcmVuY2UAAAAADAAHAmRlZXAAAAAACwAPAjEuMAAAAAATADQCMDEtamFuLTIwMjAAAAAABwCCCgAAAB0AQwUAAAALAEQAAAAABAAAAAsARQJBTlkAAAAAEgA7AmRlZXBvbWF0aWMAAAAAWwA4AiUlY3VzdG9tZXI6Y29tcGFzcyxwcm9qZWN0OnNtYXJ0X2NoZWNrb3V0LGlkOjA1YzQ2NjUzLThjMjUtNDMxZC05MTMzLWZmMjI1NTNmZTQyYSUlAAAAACAAkQJiLVk5b3VxdVhYNTNpSGJ4Ulp4NWY3d2cAAAACLwBqBQAAAAsAbAAAAAADAAAACwCSAAAAAAAAAAALAFMAAAAAIwAAAgcAawtWetNIOnNYbN4D2h1kv57pTK1e93/WEtv2LM2dZqi3os8Sw6yTr/MF1Y1HVQT19eZ3B4YrOeMyRq4TK8qRBQ7RpL4pSweDL6r798ZJado6tgMI0hoCa2MC2UFCtA07WNuBN/bCiqIg6A8Fot4B/Cm0SYGbSSq6NCTbtc0brZ4bjS41+5RUuM6fM7QBaNkkYLq9umI/kHZb+fmatFkRqioocsQgOY+k1xjk/nXCeNe0FobiyGdCDwv1nm+j4gEvLyvrmAoHnbFIQDVIwYWeLH2+lGjSt5jdfix5bXazA7YHwOQ6y18vEv0APrdJxcnRCw/r7LtkIQBM0+b7/o2cVb+hXN0W0baj8YbJeeT6boPIGcZ4QLOPxOkQ8/aADNC/njma/H5RjJJs6vF6kVf5LbT0c70XLz91SWrCezHBSVkNZBAhMYVt3Jpf2rW/w5qYNuc6d+28NOA9L3gOU229OA3cDijV6NLy+ooGHgnckRUwZh7IFljryynrDeFa+Ml561Wgsh6rs9KJDx0l2EuJLBEr3just7vk8XLI21hHysyGvLn6gzHJB7fU7P+OTddyJou3zBcBlhiVAEIJuLwi1pKi/H81W5LSWvbJLKr7IybdzpBusaOsTsxSQblsHT7tYB6EIyAZD+KFTvEomfik1gUXsN0gzkpmGFhbKEQ4pqvjcgAAAi8AagUAAAALAGwAAAAAAwAAAAsAkgAAAAAAAAAACwBTAAAAACMAAAIHAGsLFoeWUTT0YJQpM6dOw231DujRRLxtMAa3zQL6T/f0uvwols0/tcZcbR6dTgHJnbSHpRD/K8/e7OB4nW3xd4Hd6iIsbTyind/S4qIt94jDZJlmUSk0zEiCqPqp3tXmlNdb8z5AR8k5T06vL+978jikrJ56l4nf0CU27QTwZ4nj9+OQZaE3WHxmcov9Ompe/5MuYMswcl8ZPw51boFZdMU92DyDpWzmAMn65okWVc/YrvzM9o87pTiMgjLjqDxchtWmtA/3f5sz1OJpL8rb3vcV6Qk99RB82OIEH+ZyLq+je+vtWPtFJiKAi+P/23H2GcJN1b6Ky0JJFxuVxAUyajH4LbB5j/59j+LKIWXMioz/uYKIymvBGL4T9CLvoPgYG1J21mHzPyJgVhztkxVu8Y3IIdrqV7QM8lPkghzZlvEbdjD6NVcfsAwa7CfzSecX9YvTH/BpB44WcmOI5eO7piE22F2fDFU5zqC/08ylMBN4cDfrb8CjtlSZkZUAshiN1I/TwLzrRTm5xttGidJGYgoCigcdJ64IMvWNbjKmfKEIgTRPSTB95xTtIV7A7mF0NIIMjHP/mwcMiwHC2IriDKAdfg5chEuX6H8bytiOy4NwnXDYqBpo0mKgfzm40He5s0BDe3kUWfs0cs8XnlCL9X0OHibJXnBjCa9Y4trFR5Qrfp8=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: queues-config
data:
  queues_settings.json: |
        {
          "PRODUITS_LAITIERS": {
            "version_id": 17448,
            "network_id": 28380
          },
          "FRUITS": {
            "version_id": 17449,
            "network_id": 28381
          },
          "FROMAGES": {
            "version_id": 17450,
            "network_id": 28382
          },
          "CANETTES": {
            "version_id": 17451,
            "network_id": 28383
          },
          "BOUTEILLES_SODAS": {
            "version_id": 17452,
            "network_id": 28384
          },
          "PLATS_PRINCIPAUX": {
            "version_id": 17453,
            "network_id": 28385
          },
          "BOUTEILLES_VIN": {
            "version_id": 17454,
            "network_id": 28386
          },
          "DESSERTS_ENTREES": {
            "version_id": 17455,
            "network_id": 28387
          },
          "EAUX": {
            "version_id": 17456,
            "network_id": 28388
          },
          "BOISSONS_CHAUDES": {
            "version_id": 17457,
            "network_id": 28389
          },
          "PAIN": {
            "version_id": 17458,
            "network_id": 28390
          }
        }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: workflows-config
data:
  workflows.json: |
        {
            "workflows" : [
            {
                "name": "detector",
                "consumer": {
                    "amqp": {
                        "exchange": "v0.3.direct",
                        "queue": "nn_28424.forward"
                    }
                },
                "transformations": [
                    {
                        "recognition": {
                            "recognition_id": 17486
                        }
                    }
                ]
            },
            {
                "name": "BOISSONS_CHAUDES",
                "consumer": {
                    "amqp": {
                        "exchange": "v0.3.direct",
                        "queue": "nn_28389.forward"
                    }
                },
                "transformations": [
                    {
                        "recognition": {
                            "recognition_id": 17457
                        }
                    }
                ]
            },
            {
                "name": "BOUTEILLES_SODAS",
                "consumer": {
                    "amqp": {
                        "exchange": "v0.3.direct",
                        "queue": "nn_28384.forward"
                    }
                },
                "transformations": [
                    {
                        "recognition": {
                            "recognition_id": 17452
                        }
                    }
                ]
            },
            {
                "name": "BOUTEILLES_VIN",
                "consumer": {
                    "amqp": {
                        "exchange": "v0.3.direct",
                        "queue": "nn_28386.forward"
                    }
                },
                "transformations": [
                    {
                        "recognition": {
                            "recognition_id": 17454
                        }
                    }
                ]
            },
            {
                "name": "CANETTES",
                "consumer": {
                    "amqp": {
                        "exchange": "v0.3.direct",
                        "queue": "nn_28383.forward"
                    }
                },
                "transformations": [
                    {
                        "recognition": {
                            "recognition_id": 17451
                        }
                    }
                ]
            },
            {
                "name": "DESSERTS_ENTREES",
                "consumer": {
                    "amqp": {
                        "exchange": "v0.3.direct",
                        "queue": "nn_28387.forward"
                    }
                },
                "transformations": [
                    {
                        "recognition": {
                            "recognition_id": 17455
                        }
                    }
                ]
            },
            {
                "name": "EAUX",
                "consumer": {
                    "amqp": {
                        "exchange": "v0.3.direct",
                        "queue": "nn_28388.forward"
                    }
                },
                "transformations": [
                    {
                        "recognition": {
                            "recognition_id": 17456
                        }
                    }
                ]
            },
            {
                "name": "FROMAGES",
                "consumer": {
                    "amqp": {
                        "exchange": "v0.3.direct",
                        "queue": "nn_28382.forward"
                    }
                },
                "transformations": [
                    {
                        "recognition": {
                            "recognition_id": 17450
                        }
                    }
                ]
            },
            {
                "name": "FRUITS",
                "consumer": {
                    "amqp": {
                        "exchange": "v0.3.direct",
                        "queue": "nn_28381.forward"
                    }
                },
                "transformations": [
                    {
                        "recognition": {
                            "recognition_id": 17449
                        }
                    }
                ]
            },
            {
                "name": "PAIN",
                "consumer": {
                    "amqp": {
                        "exchange": "v0.3.direct",
                        "queue": "nn_28390.forward"
                    }
                },
                "transformations": [
                    {
                        "recognition": {
                            "recognition_id": 17458
                        }
                    }
                ]
            },
            {
                "name": "PLATS_PRINCIPAUX",
                "consumer": {
                    "amqp": {
                        "exchange": "v0.3.direct",
                        "queue": "nn_28385.forward"
                    }
                },
                "transformations": [
                    {
                        "recognition": {
                            "recognition_id": 17453
                        }
                    }
                ]
            },
            {
                "name": "PRODUITS_LAITIERS",
                "consumer": {
                    "amqp": {
                        "exchange": "v0.3.direct",
                        "queue": "nn_28380.forward"
                    }
                },
                "transformations": [
                    {
                        "recognition": {
                            "recognition_id": 17448
                        }
                    }
                ]
            }
            ]
        }
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db
  labels:
    app: db
spec:
  serviceName: db
  replicas: 1
  selector:
    matchLabels:
      app: db
  updateStrategy:
        type: RollingUpdate
  template:
    metadata:
      annotations:
        sherlock-app: "DeepomaticStackPROD"
        sherlock-edge: "SmartUP"
        compass-code-etab: "9753"
        sherlock-log: "true"
      labels:
        app: db
    spec:
      containers:
      - image: postgres:10
        name: db
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: db
      restartPolicy: Always
  volumeClaimTemplates:
    - metadata:
        name: db
      spec:
        storageClassName: silver
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: db
  name: db
spec:
  clusterIP: None
  ports:
  - name: headless
    port: 55555
    targetPort: 0
  selector:
    app: db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      annotations:
        sherlock-app: "DeepomaticStackPROD"
        sherlock-edge: "SmartUP"
        compass-code-etab: "9753"
        sherlock-log: "true"
      labels:
        app: rabbitmq
    spec:
      containers:
      - env:
        - name: RABBITMQ_DEFAULT_PASS
          value: password
        - name: RABBITMQ_DEFAULT_USER
          value: user
        - name: RABBITMQ_DEFAULT_VHOST
          value: compass
        image: rabbitmq:3.6-management
        name: rabbitmq
        resources: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: rabbitmq
  name: rabbitmq
spec:
  clusterIP: None
  ports:
  - name: headless
    port: 5672
    targetPort: 0
  selector:
    app: rabbitmq
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: web
  name: web
spec:
  serviceName: web
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      annotations:
        sherlock-app: "DeepomaticStackPROD"
        sherlock-edge: "SmartUP"
        compass-code-etab: "9753"
        sherlock-log: "true"
      labels:
        app: web
    spec:
      containers:
      - env:
        - name: AMQP_URL
          value: amqp://user:password@rabbitmq:5672/compass
        - name: DETECTOR_NETWORK_ID
          value: "28424"
        - name: DETECTOR_VERSION_ID
          value: "17486"
        - name: PROD
          value: "1"
        - name: SITE_NUMBER
        - name: UR_ESTABLISHMENT
          value: "9753"
        - name: VERSION
          value: "0.4"
        image: deepomatic/embedded-compass-rc:master-59
        name: nginx-deepomatic-local
        ports:
        - containerPort: 80
          hostPort: 80
        - containerPort: 8000
        resources: {}
        volumeMounts:
        - mountPath: /locale_images
          name: locale-images
        - mountPath:  /compass/web/www/data
          name: web-data
        - mountPath: /compass/web/www/queues_settings.json
          name: queues-config
          subPath: queues_settings.json
      restartPolicy: Always
      volumes:
      - name: queues-config
        configMap:
          name: queues-config
  volumeClaimTemplates:
    - metadata:
        name: locale-images
      spec:
        storageClassName: silver
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 2Gi
    - metadata:
        name: web-data
      spec:
        storageClassName: silver
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 2Gi

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: web
  name: web
spec:
  clusterIP: None
  ports:
  - name: "80"
    port: 80
    targetPort: 80
  selector:
    app: web
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: worker
  name: worker
spec:
  serviceName: worker
  replicas: 1
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      annotations:
        sherlock-app: "DeepomaticStackPROD"
        sherlock-edge: "SmartUP"
        compass-code-etab: "9753"
        sherlock-log: "true"
      labels:
        app: worker
    spec:
      containers:
      - env:
        - name: AMQP_URL
          value: amqp://user:password@rabbitmq:5672/compass
        - name: DEEPOMATIC_API_KEY
          value: 57ccc571795747aeb753425423fe5c2a
        - name: DEEPOMATIC_API_URL
          value: https://api.deepomatic.com
        - name: DEEPOMATIC_APP_ID
          value: "959334758851"
        - name: GPU_IDS
          value: "0"
        - name: WORKFLOWS_PATH
          value: /workflows.json
        - name: POSTGRE_URL
        image: deepomatic/on-premises-inference:v0.7.5
        name: worker
        resources: {}
        volumeMounts:
        - mountPath: /workflows.json
          name: workflows-config
          subPath: workflows.json
        - mountPath: /var/lib/deepomatic/license.bin
          name: license-config
          subPath: license.bin
        - mountPath: /var/lib/deepomatic/
          name: deepomatic-dir
      restartPolicy: Always
      volumes:
      - name: workflows-config
        configMap:
            name: workflows-config
      - name: license-config
        secret:
            secretName: license-secret
  volumeClaimTemplates:
    - metadata:
        name: deepomatic-dir
      spec:
        storageClassName: silver
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: worker
  name: worker
spec:
  clusterIP: None
  ports:
  - name: headless
    port: 55555
    targetPort: 0
  selector:
    app: worker