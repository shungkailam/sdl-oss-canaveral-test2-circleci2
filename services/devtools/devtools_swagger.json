{
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "swagger": "2.0",
    "basePath": "/v1.0",
    "info": {
      "description": "Sherlock devtools API",
      "title": "devtools-api",
      "license": {
        "name": "Copyright Nutanix Inc. All rights reserved"
      },
      "version": "1.0"
    },
    "host": "localhost",
    "definitions": {
        "ResponseBase": {
            "type": "object",
            "required": [
              "statusCode"
            ],
            "properties": {
              "statusCode": {
                "type": "integer",
                "format": "int16",
                "x-go-name": "StatusCode"
              }
            }
        },
        "GetLogsResponse": {
            "type": "object",
            "required": [
              "latestTimeStamp",
              "logs"
            ],
            "properties": {
                "logs": {
                    "type": "string"
                },
              "latestTimeStamp": {
                "type": "string"
              }
            }
        },
        "LogsContent": {
            "required": [
                "contents"
            ],
            "properties": {
                "contents": {
                    "type": "string",
                    "description": "Logs from container"
                }
            }
        },
        "ApiError": {
            "type": "object",
            "required": [
              "statusCode",
              "message"
            ],
            "properties": {
              "statusCode": {
                "type": "integer",
                "format": "int16",
                "x-go-name": "StatusCode"
              },
              "message": {
                "type": "string",
                "description": "Error message",
                "x-go-name": "Message"
              },
              "errorCode": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "ErrorCode"
              }
            }
        }
    },
    "paths": {
        "/logs/fetch/{endpoint}/{latestts}" : {
            "parameters": [
                {
                    "in": "path",
                    "name": "endpoint",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "path",
                    "description": "timestamp of latest object that's been read",
                    "name": "latestts",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "description": "Get logs from endpoints",
                "operationId": "GetStreamLogs",
                "responses" : {
                    "200": {
                        "description" : "Timestamp of latest entry. Use this timestamp to request more logs",
                        "schema": {
                            "$ref": "#/definitions/GetLogsResponse"
                        }
                    },
                    "default": {
                        "$ref" : "#/definitions/ApiError"
                    }
                }
            }
        },
        "/logs/push/{endpoint}" : {
            "parameters": [
                {
                    "in": "path",
                    "name": "endpoint",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/LogsContent"
                    }
                }
            ],
            "put": {
                "description": "Puts logs to endpoint",
                "operationId": "PutStreamLogs",
                "responses" : {
                    "200": {
                        "$ref": "#/definitions/ResponseBase"
                    },
                    "default": {
                        "$ref" : "#/definitions/ApiError"
                    }
                }
            }
        },
        "/logs/heartbeat/{endpoint}": {
            "parameters": [
                {
                    "in": "path",
                    "name": "endpoint",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "description": "Publisher can send heartbeat to say it's alive",
                "operationId": "PublisherHeartbeat",
                "responses" : {
                    "200": {
                        "$ref": "#/definitions/ResponseBase"
                    },
                    "default": {
                        "$ref" : "#/definitions/ApiError"
                    }
                }
            }
        }
    }
}
